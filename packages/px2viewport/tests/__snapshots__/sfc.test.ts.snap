// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`sfc > should work 1`] = `
"const __sfc__ = {};
import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from "vue";
function render(_ctx, _cache) {
  return _openBlock(), _createElementBlock("div", null, _cache[0] || (_cache[0] = [_createTextVNode(" 我的 "), _createElementVNode("div", {
    class: "bg-red",
    style: {
      "width": "13.33333vw",
      "height": "13.33333vw"
    }
  }, " Test ", -1 /* HOISTED */)]));
}

__sfc__.render = render;
__sfc__.__file = "src/App.vue";
export default __sfc__;"
`;

exports[`sfc > should work 2`] = `
"import { ref } from 'vue';
import Comp from './Comp.vue';
const __sfc__ = {
  __name: 'App',
  setup(__props, {
    expose: __expose
  }) {
    __expose();
    const msg = ref('Hello World!');
    const __returned__ = {
      msg,
      ref,
      Comp
    };
    Object.defineProperty(__returned__, '__isScriptSetup', {
      enumerable: false,
      value: true
    });
    return __returned__;
  }
};
import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from "vue";
function render(_ctx, _cache, $props, $setup, $data, $options) {
  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode("h1", null, _toDisplayString($setup.msg), 1 /* TEXT */), _withDirectives(_createElementVNode("input", {
    "onUpdate:modelValue": _cache[0] || (_cache[0] = $event => $setup.msg = $event)
  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.msg]]), _createVNode($setup["Comp"], {
    style: {
      "height": "13.33333vw"
    }
  })], 64 /* STABLE_FRAGMENT */);
}

__sfc__.render = render;
__sfc__.__file = "src/App.vue";
export default __sfc__;"
`;

exports[`sfc > should work 3`] = `
"/* Analyzed bindings: {
  "attrss": "setup-const",
  "tableData": "setup-const"
} */
import { defineComponent as _defineComponent } from 'vue';
import { resolveComponent as _resolveComponent, createVNode as _createVNode, mergeProps as _mergeProps, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from "vue";
const __sfc__ = /*@__PURE__*/_defineComponent({
  __name: 'App',
  setup(__props) {
    const attrss = {};
    const tableData = [{
      date: '2016-05-03',
      name: 'Tom',
      address: 'No. 189, Grove St, Los Angeles'
    }, {
      date: '2016-05-02',
      name: 'Tom',
      address: 'No. 189, Grove St, Los Angeles'
    }, {
      date: '2016-05-04',
      name: 'Tom',
      address: 'No. 189, Grove St, Los Angeles'
    }, {
      date: '2016-05-01',
      name: 'Tom',
      address: 'No. 189, Grove St, Los Angeles'
    }];
    return (_ctx, _cache) => {
      const _component_el_table_column = _resolveComponent("el-table-column");
      const _component_el_table = _resolveComponent("el-table");
      return _openBlock(), _createBlock(_component_el_table, _mergeProps({
        data: tableData,
        style: {
          "width": "100px"
        }
      }, attrss), {
        default: _withCtx(() => [_createVNode(_component_el_table_column, {
          prop: "date",
          label: "Date",
          width: "180"
        }), _createVNode(_component_el_table_column, {
          prop: "name",
          label: "Name",
          width: "180"
        }), _createVNode(_component_el_table_column, {
          prop: "address",
          label: "Address"
        })]),
        _: 1 /* STABLE */
      }, 16 /* FULL_PROPS */);
    };
  }
});

__sfc__.__file = "src/App.vue";
export default __sfc__;"
`;

exports[`sfc > should work 4`] = `"import { Comment, Fragment, NOOP, Teleport, Text, Transition, TransitionGroup, __commonJS, __toESM, camelize, capitalize, cloneVNode, computed, createApp, createBaseVNode, createBlock, createCommentVNode, createElementBlock, createSlots, createTextVNode, createVNode, customRef, defineComponent, effectScope, getCurrentInstance, getCurrentScope, guardReactiveProps, h, hasOwn, hyphenate, inject, isArray, isDate, isFunction, isObject, isPlainObject, isPromise, isRef, isString, isVNode, markRaw, mergeProps, nextTick, normalizeClass, normalizeProps, normalizeStyle, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onMounted, onScopeDispose, onUnmounted, onUpdated, openBlock, provide, reactive, readonly, ref, render, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, shallowReactive, shallowRef, toDisplayString, toHandlerKey, toHandlers, toRaw, toRef, toRefs, unref, useAttrs, useSlots, vModelCheckbox, vModelRadio, vModelText, vShow, warn, watch, watchEffect, withCtx, withDirectives, withKeys, withModifiers } from "/node_modules/.vite/deps/chunk-ZHP7DJLA.js?v=2689b94e";"`;
