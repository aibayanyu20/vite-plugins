// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`transform > should complex 1`] = `
{
  "code": "import { defineComponent } from 'vue'

export interface CommonProps {
  b: string
}

export interface ComplexProps {
  a: string
}

export const Complex = defineComponent<CommonProps & ComplexProps>(() => {
  return () => {
    return <div></div>;
  };
}, {
  props: [\\"b\\", \\"a\\"]
})

export const Complex1 = defineComponent((_props: CommonProps & ComplexProps) => {
  return () => {
    return <div></div>;
  };
}, {
  props: [\\"b\\", \\"a\\"]
})

export const Complex2 = defineComponent((_props: CommonProps & {
  c: string;
}) => {
  return () => {
    return <div></div>;
  };
}, {
  props: [\\"b\\", \\"c\\"]
})

export const Complex3 = defineComponent({
  props: [\\"b\\", \\"a\\"],
  setup(_props: CommonProps & ComplexProps) {
    return () => {
      return <div></div>;
    };
  }
})

export const Complex4 = defineComponent({
  props: ['a', 'b'],
  setup(_props: CommonProps & ComplexProps) {
    return () => {
      return <div></div>
    }
  },
})
",
  "map": SourceMap {
    "file": undefined,
    "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAIX;AACF;AACA,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAIX;AACF;AACA,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAIX;AACF;AACA,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMX;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;",
    "names": [],
    "sources": [
      "",
    ],
    "sourcesContent": undefined,
    "version": 3,
  },
}
`;

exports[`transform > should export default 1`] = `
{
  "code": "import { defineComponent } from 'vue'

export interface CommonProps {
  b: string
}

export default defineComponent<CommonProps>({
  props: [\\"b\\"],
  setup() {
    return () => {
      return <div></div>;
    };
  }
});
",
  "map": SourceMap {
    "file": undefined,
    "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAME;",
    "names": [],
    "sources": [
      "",
    ],
    "sourcesContent": undefined,
    "version": 3,
  },
}
`;

exports[`transform > should generic 1`] = `
{
  "code": "import { defineComponent, ref } from 'vue'
import type { Props } from './typing'

export const Generic = defineComponent(<T extends string | number,>(props: {
  msg: T;
  list: T[];
}) => {
  const count = ref(0);
  return () => <div>
          {props.msg}
          {' '}
          {count.value}
        </div>;
}, {
  props: [\\"msg\\", \\"list\\"]
})
export const Generic1 = defineComponent(<T extends Props | number,>(props: {
  msg: T;
  list: T[];
}) => {
  const count = ref(0);
  return () => <div>
          {props.msg}
          {' '}
          {count.value}
        </div>;
}, {
  props: [\\"msg\\", \\"list\\"]
})
",
  "map": SourceMap {
    "file": undefined,
    "mappings": "AAAA;AACA;AACA;AACA,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYZ;AACD,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYZ;",
    "names": [],
    "sources": [
      "",
    ],
    "sourcesContent": undefined,
    "version": 3,
  },
}
`;

exports[`transform > should inline 1`] = `
{
  "code": "import { defineComponent } from 'vue'

export const Inline = defineComponent((_props: {
  c: string;
  a: number;
}) => {
  return () => {
    return <div></div>;
  };
}, {
  props: [\\"c\\", \\"a\\"]
})

export const Inline1 = defineComponent<{
  c: string;
  a: number;
}>(() => {
  return () => {
    return <div></div>;
  };
}, {
  props: [\\"c\\", \\"a\\"]
})
export const Inline2 = defineComponent({
  props: [\\"c\\", \\"a\\"],
  setup(_props: {
    c: string;
    a: number;
  }) {
    return () => {
      return <div></div>;
    };
  }
})

export default defineComponent({
  props: [\\"c\\", \\"a\\", \\"b\\"],
  setup(_props: {
    c: string;
    a: number;
    b: string;
  }) {
    return () => {
      return <div></div>;
    };
  }
});
",
  "map": SourceMap {
    "file": undefined,
    "mappings": "AAAA;AACA;AACA,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAIX;AACF;AACA,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAIX;AACF,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMX;AACF;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAME;",
    "names": [],
    "sources": [
      "",
    ],
    "sourcesContent": undefined,
    "version": 3,
  },
}
`;

exports[`transform > should lib 1`] = `
{
  "code": "import type { TableProps } from 'ant-design-vue'
import { defineComponent } from 'vue'

export type MyTableProps = TableProps & {
  sss?: string
}

export const LibTest = defineComponent<MyTableProps>(() => {
  return () => {
    return <div></div>;
  };
}, {
  props: [\\"dropdownPrefixCls\\", \\"dataSource\\", \\"columns\\", \\"pagination\\", \\"loading\\", \\"size\\", \\"bordered\\", \\"locale\\", \\"onChange\\", \\"onResizeColumn\\", \\"rowSelection\\", \\"getPopupContainer\\", \\"scroll\\", \\"sortDirections\\", \\"showSorterTooltip\\", \\"prefixCls\\", \\"rowKey\\", \\"tableLayout\\", \\"rowClassName\\", \\"title\\", \\"footer\\", \\"id\\", \\"showHeader\\", \\"components\\", \\"customRow\\", \\"customHeaderRow\\", \\"direction\\", \\"expandFixed\\", \\"expandColumnWidth\\", \\"expandedRowKeys\\", \\"defaultExpandedRowKeys\\", \\"expandedRowRender\\", \\"expandRowByClick\\", \\"expandIcon\\", \\"onExpand\\", \\"onExpandedRowsChange\\", \\"defaultExpandAllRows\\", \\"indentSize\\", \\"expandIconColumnIndex\\", \\"showExpandColumn\\", \\"expandedRowClassName\\", \\"childrenColumnName\\", \\"rowExpandable\\", \\"sticky\\", \\"transformCellText\\", \\"sss\\"]
})
",
  "map": SourceMap {
    "file": undefined,
    "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAIX;",
    "names": [],
    "sources": [
      "",
    ],
    "sourcesContent": undefined,
    "version": 3,
  },
}
`;

exports[`transform > should nonType 1`] = `
{
  "code": "import { defineComponent } from 'vue'

export const NonType = defineComponent(() => {
  return () => {
    return <div></div>
  }
})
",
  "map": SourceMap {
    "file": undefined,
    "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;",
    "names": [],
    "sources": [
      "",
    ],
    "sourcesContent": undefined,
    "version": 3,
  },
}
`;

exports[`transform > should transform 1`] = `
{
  "code": "import { defineComponent } from 'vue'
import type { Props } from './typing'

export interface Props1 {
  foo1: string
  bar1: number
}

export type Props2 = Props & Props1
export type Props3 = Pick<Props2, 'foo1' | 'foo'>

export const Single = defineComponent<Props>(() => {
  return () => {
    return <div></div>;
  };
}, {
  props: [\\"foo\\", \\"bar\\"]
})

export const Single2 = defineComponent((_props: Props2) => {
  return () => {
    return <div></div>;
  };
}, {
  props: [\\"foo\\", \\"bar\\", \\"foo1\\", \\"bar1\\"]
})

export const Single3 = defineComponent({
  props: [\\"foo1\\", \\"foo\\"],
  setup(_props: Props3) {
    return () => {
      return <div></div>;
    };
  }
})
",
  "map": SourceMap {
    "file": undefined,
    "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAIX;AACF;AACA,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAIX;AACF;AACA,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMX;",
    "names": [],
    "sources": [
      "",
    ],
    "sourcesContent": undefined,
    "version": 3,
  },
}
`;
